# Generated by Django 4.2.4 on 2023-10-24 13:13

from django.db import migrations


def set_price_based_on_brands_name(apps, schema_editor):
    smartphone = apps.get_model('main_app', 'Smartphone')
    all_smartphones = smartphone.objects.all()

    for c_smartphone in all_smartphones:
        c_smartphone.price = len(c_smartphone.brand) * 120

    smartphone.objects.bulk_update(all_smartphones, ['price'])


def set_category(apps, schema_editor):
    smartphone = apps.get_model('main_app', 'Smartphone')
    all_smartphones = smartphone.objects.all()

    for c_smartphone in all_smartphones:
        if c_smartphone.price >= 750:
            c_smartphone.category = 'Expensive'
        else:
            c_smartphone.category = 'Cheap'

    smartphone.objects.bulk_update(all_smartphones, ['category'])


def set_price_and_category(apps, schema_editor):
    set_price_based_on_brands_name(apps, schema_editor)
    set_category(apps, schema_editor)


def reverse_price_and_category(apps, schema_editor):
    smartphone = apps.get_model('main_app', 'Smartphone')
    all_smartphones = smartphone.objects.all()
    smartphone_price_default = smartphone._meta.get_field('price').default
    smartphone_category_default = smartphone._meta.get_field('category').default

    for c_smartphone in all_smartphones:
        c_smartphone.price = smartphone_price_default
        c_smartphone.category = smartphone_category_default

    smartphone.objects.bulk_update(all_smartphones, ['price', 'category'])


class Migration(migrations.Migration):
    dependencies = [
        ('main_app', '0013_smartphone'),
    ]

    operations = [
        migrations.RunPython(set_price_and_category, reverse_code=reverse_price_and_category)
    ]
